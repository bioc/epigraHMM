// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// logForwardBackward
void logForwardBackward(arma::mat counts, arma::vec pi, arma::mat gamma, arma::mat logf, Rcpp::StringVector nameF, Rcpp::StringVector nameB);
RcppExport SEXP _epigraHMM_logForwardBackward(SEXP countsSEXP, SEXP piSEXP, SEXP gammaSEXP, SEXP logfSEXP, SEXP nameFSEXP, SEXP nameBSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type counts(countsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pi(piSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type logf(logfSEXP);
    Rcpp::traits::input_parameter< Rcpp::StringVector >::type nameF(nameFSEXP);
    Rcpp::traits::input_parameter< Rcpp::StringVector >::type nameB(nameBSEXP);
    logForwardBackward(counts, pi, gamma, logf, nameF, nameB);
    return R_NilValue;
END_RCPP
}
// simulateMarkovChain
NumericVector simulateMarkovChain(NumericMatrix P, int n);
RcppExport SEXP _epigraHMM_simulateMarkovChain(SEXP PSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type P(PSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(simulateMarkovChain(P, n));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_epigraHMM_logForwardBackward", (DL_FUNC) &_epigraHMM_logForwardBackward, 6},
    {"_epigraHMM_simulateMarkovChain", (DL_FUNC) &_epigraHMM_simulateMarkovChain, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_epigraHMM(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
